# Generated by Django 4.1.2 on 2022-10-29 20:31

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('naam', models.CharField(max_length=100, verbose_name='Evenement naam')),
                ('beschrijving', models.TextField(blank=True, verbose_name='Beschrijving')),
                ('datum', models.DateField(blank=True, help_text='Datum van het evenement', null=True, verbose_name='Datum')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier (UUID4)', unique=True)),
            ],
            options={
                'verbose_name': 'Evenement',
                'verbose_name_plural': 'Evenementen',
            },
        ),
        migrations.CreateModel(
            name='Rak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('lengte', models.FloatField(blank=True, null=True, verbose_name='Raklengte volgens organisatie')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID4)', unique=True)),
                ('evenement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rakken', to='rakken.evenement')),
            ],
            options={
                'verbose_name_plural': 'rakken',
            },
        ),
        migrations.CreateModel(
            name='RakType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('type', models.CharField(max_length=100, verbose_name='Rak Type')),
                ('beschrijving', models.TextField(blank=True, verbose_name='Beschrijving')),
                ('max_aantal', models.PositiveIntegerField(null=True, verbose_name='Maximaal aantal keren te varen')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier (UUID4)', unique=True)),
            ],
            options={
                'verbose_name': 'rak type',
                'verbose_name_plural': 'rak types',
            },
        ),
        migrations.CreateModel(
            name='WaypointType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('type', models.CharField(max_length=100, verbose_name='Waypoint Type')),
                ('beschrijving', models.TextField(blank=True, verbose_name='Beschrijving')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier (UUID4)', unique=True)),
            ],
            options={
                'verbose_name': 'waypoint type',
                'verbose_name_plural': 'waypoint types',
            },
        ),
        migrations.CreateModel(
            name='Weer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('windkracht', models.PositiveIntegerField(default=0, verbose_name='windkracht (knt)')),
                ('windrichting', models.FloatField(default=0, verbose_name='windrichting')),
            ],
            options={
                'verbose_name_plural': 'weer',
            },
        ),
        migrations.CreateModel(
            name='Waypoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('naam', models.CharField(help_text='Naam van het waypoint', max_length=255, unique=True, verbose_name='Waypoint naam')),
                ('omschrijving', models.TextField(blank=True, help_text='Omschrijving van het waypoint', verbose_name='Waypoint Omschrijving')),
                ('latitude', models.FloatField(default=0)),
                ('longitude', models.FloatField(default=0)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID4)', unique=True)),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='waypoints', to='rakken.waypointtype')),
            ],
            options={
                'verbose_name_plural': 'waypoints',
            },
        ),
        migrations.CreateModel(
            name='RakScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('bearing', models.FloatField(blank=True, null=True, verbose_name='bearing')),
                ('twa', models.FloatField(blank=True, null=True, verbose_name='twa')),
                ('score', models.TextField(blank=True, null=True, verbose_name='score')),
                ('color', models.TextField(blank=True, null=True, verbose_name='kleurscore')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier (UUID4)', unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date when the record was first registered in the system')),
                ('rak', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rakscores', to='rakken.rak')),
                ('waypoint1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rakscoreswp1', to='rakken.waypoint')),
                ('waypoint2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rakscoreswp2', to='rakken.waypoint')),
                ('weer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rakscores', to='rakken.weer')),
            ],
            options={
                'verbose_name_plural': 'rakscores',
            },
        ),
        migrations.AddField(
            model_name='rak',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rakken', to='rakken.raktype'),
        ),
        migrations.AddField(
            model_name='rak',
            name='waypoint1',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waypoint1', to='rakken.waypoint'),
        ),
        migrations.AddField(
            model_name='rak',
            name='waypoint2',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waypoint2', to='rakken.waypoint'),
        ),
        migrations.CreateModel(
            name='Baan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('naam', models.CharField(max_length=100, verbose_name='Naam van de baan')),
                ('beschrijving', models.TextField(blank=True, verbose_name='Beschrijving')),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='Unique identifier (UUID4)', unique=True)),
                ('start_at', models.DateField(auto_now=True, help_text='Start date of the baan record', verbose_name='start at')),
                ('end_at', models.DateField(blank=True, editable=False, help_text='End date of the baan record', null=True, verbose_name='end at')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Date when the baan was registered in the system')),
                ('evenement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='banen', to='rakken.evenement')),
                ('rak', models.ManyToManyField(blank=True, related_name='banen', to='rakken.rak')),
                ('weer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='banen', to='rakken.weer')),
            ],
            options={
                'verbose_name_plural': 'banen',
            },
        ),
    ]
